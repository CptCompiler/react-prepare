{"version":3,"sources":["../src/prepared.js"],"names":["prepared","prepare","pure","componentDidMount","componentWillReceiveProps","contextTypes","displayName","OriginalComponent","PreparedComponent","props","context","nextProps","nextContext","PureComponent","Component","__REACT_PREPARE__","bind","isPrepared","CustomComponent","getPrepare"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW,CACfC,OADe;AAAA,iFAOX,EAPW;AAAA,uBAGbC,IAHa;AAAA,MAGbA,IAHa,6BAGN,IAHM;AAAA,mCAIbC,iBAJa;AAAA,MAIbA,kBAJa,yCAIO,IAJP;AAAA,mCAKbC,yBALa;AAAA,MAKbA,0BALa,yCAKe,IALf;AAAA,+BAMbC,YANa;AAAA,MAMbA,YANa,qCAME,EANF;;AAAA,SAQZ,6BAAqB;AAAA,QAChBC,WADgB,GACAC,iBADA,CAChBD,WADgB;;AAAA,QAElBE,iBAFkB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,4CAQF;AAClB,cAAIL,kBAAJ,EAAuB;AACrBF,oBAAQ,KAAKQ,KAAb,EAAoB,KAAKC,OAAzB;AACD;AACF;;AAPD;;AALsB;AAAA;AAAA,kDAcIC,SAdJ,EAceC,WAdf,EAc4B;AAChD,cAAIR,0BAAJ,EAA+B;AAC7BH,oBAAQU,SAAR,EAAmBC,WAAnB;AACD;AACF;AAlBqB;AAAA;AAAA,iCAoBb;AACP,iBAAO,8BAAC,iBAAD,EAAuB,KAAKH,KAA5B,CAAP;AACD;AAtBqB;AAAA;AAAA,MAESP,OAAOW,oBAAP,GAAuBC,gBAFhC;;AAElBN,qBAFkB,CAGfF,WAHe,0BAGmBA,oBAAkBA,WAAlB,SAAmC,EAHtD;AAElBE,qBAFkB,CAMfH,YANe,GAMAA,YANA;;AAwBxBG,sBAAkBO,4BAAlB,IAAuCd,QAAQe,IAAR,CAAa,IAAb,CAAvC;AACA,WAAOR,iBAAP;AACD,GAlCgB;AAAA,CAAjB;;AAoCA,SAASS,UAAT,CAAoBC,eAApB,EAAqC;AACnC,SAAO,OAAOA,gBAAgBH,4BAAhB,CAAP,KAA8C,UAArD;AACD;;AAED,SAASI,UAAT,CAAoBD,eAApB,EAAqC;AACnC,SAAOA,gBAAgBH,4BAAhB,CAAP;AACD;;QAEQE,U,GAAAA,U;QAAYE,U,GAAAA,U;kBACNnB,Q","file":"prepared.js","sourcesContent":["import React, { PureComponent, Component } from 'react';\n\nimport { __REACT_PREPARE__ } from './constants';\n\nconst prepared = (\n  prepare,\n  {\n    pure = true,\n    componentDidMount = true,\n    componentWillReceiveProps = true,\n    contextTypes = {},\n  } = {},\n) => OriginalComponent => {\n  const { displayName } = OriginalComponent;\n  class PreparedComponent extends (pure ? PureComponent : Component) {\n    static displayName = `PreparedComponent${displayName ? `(${displayName})` : ''}`;\n\n    // Placeholder to allow referencing this.context in lifecycle methods\n    static contextTypes = contextTypes;\n\n    componentDidMount() {\n      if (componentDidMount) {\n        prepare(this.props, this.context);\n      }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      if (componentWillReceiveProps) {\n        prepare(nextProps, nextContext);\n      }\n    }\n\n    render() {\n      return <OriginalComponent {...this.props} />;\n    }\n  }\n  PreparedComponent[__REACT_PREPARE__] = prepare.bind(null);\n  return PreparedComponent;\n};\n\nfunction isPrepared(CustomComponent) {\n  return typeof CustomComponent[__REACT_PREPARE__] === 'function';\n}\n\nfunction getPrepare(CustomComponent) {\n  return CustomComponent[__REACT_PREPARE__];\n}\n\nexport { isPrepared, getPrepare };\nexport default prepared;\n"]}