{"version":3,"sources":["../../src/tests/prepare.spec.js"],"names":["global","describe","it","MessageBox","t","assert","props","message","state","updater","undefined","refs","context","React","Component","propTypes","PropTypes","string","setState","doAsyncSideEffect","sinon","spy","prepareUsingProps","text","App","calledOnce","getCall","args","html","classNameOfFirstChild","classNameOfSecondChild","doAsyncSideEffectForFirstChild","prepareUsingPropsForFirstChild","doAsyncSideEffectForSecondChild","prepareUsingPropsForSecondChild","FirstChild","SecondChild","texts","array"],"mappings":"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","file":"prepare.spec.js","sourcesContent":["const { describe, it } = global;\nimport t from 'tcomb';\nimport sinon from 'sinon';\nimport equal from 'deep-equal';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport prepared from '../prepared';\nimport prepare from '../prepare';\n\ndescribe('prepare', () => {\n  it('sets instance properties', async () => {\n    class MessageBox extends React.Component {\n      static propTypes = {\n        message: PropTypes.string,\n      };\n\n      constructor() {\n        super();\n      }\n\n      render() {\n        t.assert(\n          equal(this.props, { message: 'Hello' }),\n          'sets props on instance',\n        );\n        t.assert(this.state === null, 'sets state on instance');\n        t.assert(this.updater !== undefined, 'sets updater on instance'); // eslint-disable-line no-undefined\n        t.assert(equal(this.refs, {}), 'sets refs on instance');\n        t.assert(equal(this.context, {}), 'sets context on instance');\n        return null;\n      }\n    }\n\n    renderToStaticMarkup(<MessageBox message=\"Hello\" />);\n\n    await prepare(<MessageBox message=\"Hello\" />);\n  });\n\n  it('supports state updates inside componentWillMount', async () => {\n    class MessageBox extends React.Component {\n      constructor() {\n        super();\n        this.state = {\n          message: 'Hello',\n        };\n      }\n\n      componentWillMount() {\n        this.setState({ message: 'Updated message' });\n      }\n\n      render() {\n        t.assert(\n          equal(this.state.message, 'Updated message'),\n          'updates state on instance',\n        );\n        return null;\n      }\n    }\n\n    renderToStaticMarkup(<MessageBox />);\n\n    await prepare(<MessageBox />);\n  });\n\n  it('Shallow hierarchy (no children)', async () => {\n    const doAsyncSideEffect = sinon.spy(async () => {});\n    const prepareUsingProps = sinon.spy(async ({ text }) => {\n      await doAsyncSideEffect(text);\n    });\n    const App = prepared(prepareUsingProps)(({ text }) => <div>{text}</div>);\n    await prepare(<App text=\"foo\" />);\n    t.assert(\n      prepareUsingProps.calledOnce,\n      'prepareUsingProps has been called exactly once',\n    );\n    t.assert(\n      equal(prepareUsingProps.getCall(0).args, [{ text: 'foo' }, {}]),\n      'prepareUsingProps has been called with correct arguments',\n    );\n    t.assert(\n      doAsyncSideEffect.calledOnce,\n      'doAsyncSideEffect has been called exactly once',\n    );\n    t.assert(\n      equal(doAsyncSideEffect.getCall(0).args, ['foo']),\n      'doAsyncSideEffect has been called with correct arguments',\n    );\n    const html = renderToStaticMarkup(<App text=\"foo\" />);\n    t.assert(html === '<div>foo</div>', 'renders with correct html');\n  });\n\n  it('Deep hierarchy', async () => {\n    let classNameOfFirstChild = 'FirstChild';\n    let classNameOfSecondChild = 'SecondChild';\n    const doAsyncSideEffectForFirstChild = sinon.spy(async () => {\n      classNameOfFirstChild = 'prepared(FirstChild)';\n    });\n    const prepareUsingPropsForFirstChild = sinon.spy(async ({ text }) => {\n      await doAsyncSideEffectForFirstChild(text);\n    });\n    const doAsyncSideEffectForSecondChild = sinon.spy(async () => {\n      classNameOfSecondChild = 'prepared(SecondChild)';\n    });\n    const prepareUsingPropsForSecondChild = sinon.spy(async ({ text }) => {\n      await doAsyncSideEffectForSecondChild(text);\n    });\n\n    const FirstChild = prepared(prepareUsingPropsForFirstChild)(({ text }) => (\n      <span className={classNameOfFirstChild}>{text}</span>\n    ));\n    const SecondChild = prepared(\n      prepareUsingPropsForSecondChild,\n    )(({ text }) => <span className={classNameOfSecondChild}>{text}</span>);\n\n    const App = ({ texts }) => (\n      <ul>\n        <li key={0}><FirstChild text={texts[0]} /></li>\n        <li key={1}><SecondChild text={texts[1]} /></li>\n      </ul>\n    );\n    App.propTypes = {\n      texts: PropTypes.array,\n    };\n\n    await prepare(<App texts={['first', 'second']} />);\n\n    t.assert(\n      prepareUsingPropsForFirstChild.calledOnce,\n      'prepareUsingPropsForFirstChild has been called exactly once',\n    );\n    t.assert(\n      equal(prepareUsingPropsForFirstChild.getCall(0).args, [\n        { text: 'first' },\n        {},\n      ]),\n      'prepareUsingPropsForFirstChild has been called with correct arguments',\n    );\n    t.assert(\n      doAsyncSideEffectForFirstChild.calledOnce,\n      'doAsyncSideEffectForFirstChild has been called exactly once',\n    );\n    t.assert(\n      equal(doAsyncSideEffectForFirstChild.getCall(0).args, ['first']),\n      'doAsyncSideEffectForFirstChild has been called with correct arguments',\n    );\n\n    t.assert(\n      prepareUsingPropsForSecondChild.calledOnce,\n      'prepareUsingPropsForSecondChild has been called exactly once',\n    );\n    t.assert(\n      equal(prepareUsingPropsForSecondChild.getCall(0).args, [\n        { text: 'second' },\n        {},\n      ]),\n      'prepareUsingPropsForSecondChild has been called with correct arguments',\n    );\n    t.assert(\n      doAsyncSideEffectForSecondChild.calledOnce,\n      'doAsyncSideEffectForSecondChild has been called exactly once',\n    );\n    t.assert(\n      equal(doAsyncSideEffectForSecondChild.getCall(0).args, ['second']),\n      'doAsyncSideEffectForSecondChild has been called with correct arguments',\n    );\n\n    const html = renderToStaticMarkup(<App texts={['first', 'second']} />);\n    t.assert(\n      html ===\n        '<ul><li><span class=\"prepared(FirstChild)\">first</span></li><li><span class=\"prepared(SecondChild)\">second</span></li></ul>',\n    ); // eslint-disable-line max-len\n  });\n});\n"]}