{"version":3,"sources":["../../src/tests/prepared.spec.js"],"names":["global","describe","it","OriginalCompositeComponent","props","text","Component","propTypes","PropTypes","string","OriginalCompositePureComponent","PureComponent","OriginalArrowComponent","doAsyncSideEffect","sinon","spy","prepareUsingProps","PreparedCompositeComponent","pure","t","assert","prepare","calledOnce","getCall","args","html"],"mappings":"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","file":"prepared.spec.js","sourcesContent":["const { describe, it } = global;\nimport sinon from 'sinon';\nimport t from 'tcomb';\nimport equal from 'deep-equal';\nimport React, { Component, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport prepared, { isPrepared, getPrepare } from '../prepared';\n\ndescribe('prepared', () => {\n  class OriginalCompositeComponent extends Component {\n    static propTypes = {\n      text: PropTypes.string,\n    };\n    render() {\n      return <div>{this.props.text}</div>;\n    }\n  }\n\n  class OriginalCompositePureComponent extends PureComponent {\n    static propTypes = {\n      text: PropTypes.string,\n    };\n    render() {\n      return <div>{this.props.text}</div>;\n    }\n  }\n\n  const OriginalArrowComponent = ({ text }) => <div>{text}</div>;\n  OriginalArrowComponent.propTypes = {\n    text: PropTypes.string,\n  };\n\n  it('prepared Composite Component', async () => {\n    const doAsyncSideEffect = sinon.spy(async () => {});\n    const prepareUsingProps = sinon.spy(async ({ text }) => {\n      await doAsyncSideEffect(text);\n    });\n    const PreparedCompositeComponent = prepared(prepareUsingProps, {\n      pure: false,\n    })(OriginalCompositeComponent);\n    t.assert(\n      !isPrepared(OriginalCompositeComponent),\n      'OriginalComponent is not prepared',\n    );\n    t.assert(\n      isPrepared(PreparedCompositeComponent),\n      'PreparedComponent is prepared',\n    );\n    const prepare = getPrepare(PreparedCompositeComponent);\n    t.assert(\n      typeof prepare === 'function',\n      'getPrepare(PreparedCompositeComponent) is a function',\n    );\n    await prepare({ text: 'foo' });\n    t.assert(\n      prepareUsingProps.calledOnce,\n      'prepareUsingProps has been called exactly once',\n    );\n    t.assert(\n      equal(prepareUsingProps.getCall(0).args, [{ text: 'foo' }]),\n      'prepareUsingProps has been called with correct arguments',\n    );\n    t.assert(\n      doAsyncSideEffect.calledOnce,\n      'doAsyncSideEffect has been called exactly once',\n    );\n    t.assert(\n      equal(doAsyncSideEffect.getCall(0).args, ['foo']),\n      'doAsyncSideEffect has been called with correct arguments',\n    );\n    const html = renderToStaticMarkup(\n      <PreparedCompositeComponent text=\"foo\" />,\n    );\n    t.assert(html === '<div>foo</div>', 'renders with correct html');\n  });\n\n  it('prepared Composite Pure Component', async () => {\n    const doAsyncSideEffect = sinon.spy(async () => {});\n    const prepareUsingProps = sinon.spy(async ({ text }) => {\n      await doAsyncSideEffect(text);\n    });\n    const PreparedCompositeComponent = prepared(prepareUsingProps)(\n      OriginalCompositePureComponent,\n    );\n    t.assert(\n      !isPrepared(OriginalCompositePureComponent),\n      'OriginalComponent is not prepared',\n    );\n    t.assert(\n      isPrepared(PreparedCompositeComponent),\n      'PreparedComponent is prepared',\n    );\n    const prepare = getPrepare(PreparedCompositeComponent);\n    t.assert(\n      typeof prepare === 'function',\n      'getPrepare(PreparedCompositeComponent) is a function',\n    );\n    await prepare({ text: 'foo' });\n    t.assert(\n      prepareUsingProps.calledOnce,\n      'prepareUsingProps has been called exactly once',\n    );\n    t.assert(\n      equal(prepareUsingProps.getCall(0).args, [{ text: 'foo' }]),\n      'prepareUsingProps has been called with correct arguments',\n    );\n    t.assert(\n      doAsyncSideEffect.calledOnce,\n      'doAsyncSideEffect has been called exactly once',\n    );\n    t.assert(\n      equal(doAsyncSideEffect.getCall(0).args, ['foo']),\n      'doAsyncSideEffect has been called with correct arguments',\n    );\n    const html = renderToStaticMarkup(\n      <PreparedCompositeComponent text=\"foo\" />,\n    );\n    t.assert(html === '<div>foo</div>', 'renders with correct html');\n  });\n\n  it('prepared Arrow Component', async () => {\n    const doAsyncSideEffect = sinon.spy(async () => {});\n    const prepareUsingProps = sinon.spy(async ({ text }) => {\n      await doAsyncSideEffect(text);\n    });\n    const PreparedCompositeComponent = prepared(prepareUsingProps)(\n      OriginalArrowComponent,\n    );\n    t.assert(\n      !isPrepared(OriginalArrowComponent),\n      'OriginalComponent is not prepared',\n    );\n    t.assert(\n      isPrepared(PreparedCompositeComponent),\n      'PreparedComponent is prepared',\n    );\n    const prepare = getPrepare(PreparedCompositeComponent);\n    t.assert(\n      typeof prepare === 'function',\n      'getPrepare(PreparedCompositeComponent) is a function',\n    );\n    await prepare({ text: 'foo' });\n    t.assert(\n      prepareUsingProps.calledOnce,\n      'prepareUsingProps has been called exactly once',\n    );\n    t.assert(\n      equal(prepareUsingProps.getCall(0).args, [{ text: 'foo' }]),\n      'prepareUsingProps has been called with correct arguments',\n    );\n    t.assert(\n      doAsyncSideEffect.calledOnce,\n      'doAsyncSideEffect has been called exactly once',\n    );\n    t.assert(\n      equal(doAsyncSideEffect.getCall(0).args, ['foo']),\n      'doAsyncSideEffect has been called with correct arguments',\n    );\n    const html = renderToStaticMarkup(\n      <PreparedCompositeComponent text=\"foo\" />,\n    );\n    t.assert(html === '<div>foo</div>', 'renders with correct html');\n  });\n});\n"]}